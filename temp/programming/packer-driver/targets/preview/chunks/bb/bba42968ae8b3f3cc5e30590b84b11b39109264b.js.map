{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/proxy-from-env/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","parseUrl","parse","DEFAULT_PORTS","ftp","gopher","http","https","ws","wss","stringEndsWith","String","prototype","endsWith","s","length","indexOf","getProxyForUrl","parsedUrl","proto","protocol","hostname","host","port","split","replace","parseInt","shouldProxy","proxy","getEnv","NO_PROXY","toLowerCase","every","parsedProxy","match","parsedProxyHostname","parsedProxyPort","test","charAt","slice","call","key","process","env","toUpperCase","_cjsExports","_getProxyForUrl"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'url';\nlet _cjsExports;\nlet _getProxyForUrl;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n var parseUrl = require('url').parse;\n\n var DEFAULT_PORTS = {\n   ftp: 21,\n   gopher: 70,\n   http: 80,\n   https: 443,\n   ws: 80,\n   wss: 443,\n };\n\n var stringEndsWith = String.prototype.endsWith || function(s) {\n   return s.length <= this.length &&\n     this.indexOf(s, this.length - s.length) !== -1;\n };\n\n /**\n  * @param {string|object} url - The URL, or the result from url.parse.\n  * @return {string} The URL of the proxy that should handle the request to the\n  *  given URL. If no proxy is set, this will be an empty string.\n  */\n function getProxyForUrl(url) {\n   var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n   var proto = parsedUrl.protocol;\n   var hostname = parsedUrl.host;\n   var port = parsedUrl.port;\n   if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n     return '';  // Don't proxy URLs without a valid scheme or host.\n   }\n\n   proto = proto.split(':', 1)[0];\n   // Stripping ports in this way instead of using parsedUrl.hostname to make\n   // sure that the brackets around IPv6 addresses are kept.\n   hostname = hostname.replace(/:\\d*$/, '');\n   port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n   if (!shouldProxy(hostname, port)) {\n     return '';  // Don't proxy URLs that match NO_PROXY.\n   }\n\n   var proxy =\n     getEnv('npm_config_' + proto + '_proxy') ||\n     getEnv(proto + '_proxy') ||\n     getEnv('npm_config_proxy') ||\n     getEnv('all_proxy');\n   if (proxy && proxy.indexOf('://') === -1) {\n     // Missing scheme in proxy, default to the requested URL's scheme.\n     proxy = proto + '://' + proxy;\n   }\n   return proxy;\n }\n\n /**\n  * Determines whether a given URL should be proxied.\n  *\n  * @param {string} hostname - The host name of the URL.\n  * @param {number} port - The effective port of the URL.\n  * @returns {boolean} Whether the given URL should be proxied.\n  * @private\n  */\n function shouldProxy(hostname, port) {\n   var NO_PROXY =\n     (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n   if (!NO_PROXY) {\n     return true;  // Always proxy if NO_PROXY is not set.\n   }\n   if (NO_PROXY === '*') {\n     return false;  // Never proxy if wildcard is set.\n   }\n\n   return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n     if (!proxy) {\n       return true;  // Skip zero-length hosts.\n     }\n     var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n     var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n     var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n     if (parsedProxyPort && parsedProxyPort !== port) {\n       return true;  // Skip if ports don't match.\n     }\n\n     if (!/^[.*]/.test(parsedProxyHostname)) {\n       // No wildcards, so stop proxying if there is an exact match.\n       return hostname !== parsedProxyHostname;\n     }\n\n     if (parsedProxyHostname.charAt(0) === '*') {\n       // Remove leading wildcard.\n       parsedProxyHostname = parsedProxyHostname.slice(1);\n     }\n     // Stop proxying if the hostname ends with the no_proxy host.\n     return !stringEndsWith.call(hostname, parsedProxyHostname);\n   });\n }\n\n /**\n  * Get the value for an environment variable.\n  *\n  * @param {string} key - The name of the environment variable.\n  * @return {string} The value of the environment variable.\n  * @private\n  */\n function getEnv(key) {\n   return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n }\n\n exports.getProxyForUrl = getProxyForUrl;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_getProxyForUrl = module.exports.getProxyForUrl;\n\n}, () => ({\n  'url': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}