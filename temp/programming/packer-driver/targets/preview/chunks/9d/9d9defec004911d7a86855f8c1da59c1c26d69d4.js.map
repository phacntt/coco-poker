{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/helpers/validator.js"],"names":["assertOptions","options","schema","allowUnknown","AxiosError","ERR_BAD_OPTION_VALUE","keys","Object","i","length","opt","validator","value","result","undefined","ERR_BAD_OPTION","VERSION","validators","forEach","type","thing","deprecatedWarnings","transitional","version","message","formatMessage","desc","opts","ERR_DEPRECATED","console","warn"],"mappings":"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","sourcesContent":["'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n"]}