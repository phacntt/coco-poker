{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/asynckit/lib/abort.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","abort","state","Object","keys","jobs","forEach","clean","bind","key","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AACAF,QAAAA,MAAM,CAACF,OAAP,GAAiBK,KAAjB;AAEA;AACD;AACA;AACA;AACA;;AACC,iBAASA,KAAT,CAAeC,KAAf,EACA;AACEC,UAAAA,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,IAAlB,EAAwBC,OAAxB,CAAgCC,KAAK,CAACC,IAAN,CAAWN,KAAX,CAAhC,EADF,CAGE;;AACAA,UAAAA,KAAK,CAACG,IAAN,GAAa,EAAb;AACD;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,iBAASE,KAAT,CAAeE,GAAf,EACA;AACE,cAAI,OAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAP,IAAyB,UAA7B,EACA;AACE,iBAAKJ,IAAL,CAAUI,GAAV;AACD;AACF,SAhCyF,CAmC3F;;;AAEA,2BAAAC,WAAW,GAAGZ,MAAM,CAACF,OAArB;AAGC,OAxCD,EAwCG,EAxCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // API\n module.exports = abort;\n\n /**\n  * Aborts leftover active jobs\n  *\n  * @param {object} state - current state object\n  */\n function abort(state)\n {\n   Object.keys(state.jobs).forEach(clean.bind(state));\n\n   // reset leftover jobs\n   state.jobs = {};\n }\n\n /**\n  * Cleans up leftover job by invoking abort function for the provided job id\n  *\n  * @this  state\n  * @param {string|number} key - job id to abort\n  */\n function clean(key)\n {\n   if (typeof this.jobs[key] == 'function')\n   {\n     this.jobs[key]();\n   }\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}