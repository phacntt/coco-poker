{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/helpers/AxiosTransformStream.js"],"names":["AxiosTransformStream","stream","utils","throttle","speedometer","kInternals","Symbol","Transform","constructor","options","toFlatObject","maxRate","chunkSize","minChunkSize","timeWindow","ticksRate","samplesCount","prop","source","isUndefined","readableHighWaterMark","self","internals","length","bytesSeen","isCaptured","notifiedBytesLoaded","ts","Date","now","bytes","onReadCallback","_speedometer","on","event","bytesNotified","updateProgress","throttledHandler","totalBytes","bytesTransferred","progressBytes","destroyed","rate","process","nextTick","emit","undefined","onFinish","once","_read","size","_transform","chunk","encoding","callback","divider","bytesThreshold","Math","max","pushChunk","_chunk","_callback","Buffer","byteLength","push","transformChunk","chunkRemainder","maxChunkSize","bytesLeft","passed","setTimeout","subarray","transformNextChunk","err","setLength"],"mappings":"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","sourcesContent":["'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\nimport throttle from './throttle.js';\nimport speedometer from './speedometer.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const self = this;\n\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n\n    let bytesNotified = 0;\n\n    internals.updateProgress = throttle(function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n\n      process.nextTick(() => {\n        self.emit('progress', {\n          'loaded': bytesTransferred,\n          'total': totalBytes,\n          'progress': totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          'bytes': progressBytes,\n          'rate': rate ? rate : undefined,\n          'estimated': rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined\n        });\n      });\n    }, internals.ticksRate);\n\n    const onFinish = () => {\n      internals.updateProgress(true);\n    };\n\n    this.once('end', onFinish);\n    this.once('error', onFinish);\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }\n}\n\nexport default AxiosTransformStream;\n"]}