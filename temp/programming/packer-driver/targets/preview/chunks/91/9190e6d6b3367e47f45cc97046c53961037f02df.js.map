{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/core/dispatchRequest.js"],"names":["throwIfCancellationRequested","config","cancelToken","throwIfRequested","signal","aborted","CanceledError","dispatchRequest","headers","AxiosHeaders","from","data","transformData","call","transformRequest","indexOf","method","setContentType","adapter","adapters","getAdapter","defaults","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","isCancel","Promise","reject"],"mappings":"AAAA;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,4BAAT,CAAsCC,MAAtC,EAA8C;AAC5C,QAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBD,MAAAA,MAAM,CAACC,WAAP,CAAmBC,gBAAnB;AACD;;AAED,QAAIF,MAAM,CAACG,MAAP,IAAiBH,MAAM,CAACG,MAAP,CAAcC,OAAnC,EAA4C;AAC1C,YAAM,IAAIC,aAAJ,CAAkB,IAAlB,EAAwBL,MAAxB,CAAN;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,WAASM,eAAT,CAAyBN,MAAzB,EAAiC;AAC9CD,IAAAA,4BAA4B,CAACC,MAAD,CAA5B;AAEAA,IAAAA,MAAM,CAACO,OAAP,GAAiBC,YAAY,CAACC,IAAb,CAAkBT,MAAM,CAACO,OAAzB,CAAjB,CAH8C,CAK9C;;AACAP,IAAAA,MAAM,CAACU,IAAP,GAAcC,aAAa,CAACC,IAAd,CACZZ,MADY,EAEZA,MAAM,CAACa,gBAFK,CAAd;;AAKA,QAAI,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyBC,OAAzB,CAAiCd,MAAM,CAACe,MAAxC,MAAoD,CAAC,CAAzD,EAA4D;AAC1Df,MAAAA,MAAM,CAACO,OAAP,CAAeS,cAAf,CAA8B,mCAA9B,EAAmE,KAAnE;AACD;;AAED,QAAMC,OAAO,GAAGC,QAAQ,CAACC,UAAT,CAAoBnB,MAAM,CAACiB,OAAP,IAAkBG,QAAQ,CAACH,OAA/C,CAAhB;AAEA,WAAOA,OAAO,CAACjB,MAAD,CAAP,CAAgBqB,IAAhB,CAAqB,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACjExB,MAAAA,4BAA4B,CAACC,MAAD,CAA5B,CADiE,CAGjE;;AACAuB,MAAAA,QAAQ,CAACb,IAAT,GAAgBC,aAAa,CAACC,IAAd,CACdZ,MADc,EAEdA,MAAM,CAACwB,iBAFO,EAGdD,QAHc,CAAhB;AAMAA,MAAAA,QAAQ,CAAChB,OAAT,GAAmBC,YAAY,CAACC,IAAb,CAAkBc,QAAQ,CAAChB,OAA3B,CAAnB;AAEA,aAAOgB,QAAP;AACD,KAbM,EAaJ,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AACrC,UAAI,CAACC,QAAQ,CAACD,MAAD,CAAb,EAAuB;AACrB3B,QAAAA,4BAA4B,CAACC,MAAD,CAA5B,CADqB,CAGrB;;AACA,YAAI0B,MAAM,IAAIA,MAAM,CAACH,QAArB,EAA+B;AAC7BG,UAAAA,MAAM,CAACH,QAAP,CAAgBb,IAAhB,GAAuBC,aAAa,CAACC,IAAd,CACrBZ,MADqB,EAErBA,MAAM,CAACwB,iBAFc,EAGrBE,MAAM,CAACH,QAHc,CAAvB;AAKAG,UAAAA,MAAM,CAACH,QAAP,CAAgBhB,OAAhB,GAA0BC,YAAY,CAACC,IAAb,CAAkBiB,MAAM,CAACH,QAAP,CAAgBhB,OAAlC,CAA1B;AACD;AACF;;AAED,aAAOqB,OAAO,CAACC,MAAR,CAAeH,MAAf,CAAP;AACD,KA7BM,CAAP;AA8BD;;qBA/CuBpB,e;;;;AA/BjBK,MAAAA,a;;AACAgB,MAAAA,Q;;AACAP,MAAAA,Q;;AACAf,MAAAA,a;;AACAG,MAAAA,Y;;AACAU,MAAAA,Q","sourcesContent":["'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n"]}