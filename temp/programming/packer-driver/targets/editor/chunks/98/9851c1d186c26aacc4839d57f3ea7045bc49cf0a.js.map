{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/asynckit/lib/state.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","state","list","sortMethod","isNamedList","Array","isArray","initState","index","keyedList","Object","keys","jobs","results","size","length","sort","a","b","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AACAF,QAAAA,MAAM,CAACF,OAAP,GAAiBK,KAAjB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,iBAASA,KAAT,CAAeC,IAAf,EAAqBC,UAArB,EACA;AACE,cAAIC,WAAW,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAnB;AAAA,cACIK,SAAS,GACX;AACEC,YAAAA,KAAK,EAAM,CADb;AAEEC,YAAAA,SAAS,EAAEL,WAAW,IAAID,UAAf,GAA4BO,MAAM,CAACC,IAAP,CAAYT,IAAZ,CAA5B,GAAgD,IAF7D;AAGEU,YAAAA,IAAI,EAAO,EAHb;AAIEC,YAAAA,OAAO,EAAIT,WAAW,GAAG,EAAH,GAAQ,EAJhC;AAKEU,YAAAA,IAAI,EAAOV,WAAW,GAAGM,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBa,MAArB,GAA8Bb,IAAI,CAACa;AAL3D,WAFF;;AAWA,cAAIZ,UAAJ,EACA;AACE;AACA;AACAI,YAAAA,SAAS,CAACE,SAAV,CAAoBO,IAApB,CAAyBZ,WAAW,GAAGD,UAAH,GAAgB,UAASc,CAAT,EAAYC,CAAZ,EACpD;AACE,qBAAOf,UAAU,CAACD,IAAI,CAACe,CAAD,CAAL,EAAUf,IAAI,CAACgB,CAAD,CAAd,CAAjB;AACD,aAHD;AAID;;AAED,iBAAOX,SAAP;AACD,SAxCyF,CA2C3F;;;AAEA,2BAAAY,WAAW,GAAGrB,MAAM,CAACF,OAArB;AAGC,OAhDD,EAgDG,EAhDH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // API\n module.exports = state;\n\n /**\n  * Creates initial state object\n  * for iteration over list\n  *\n  * @param   {array|object} list - list to iterate over\n  * @param   {function|null} sortMethod - function to use for keys sort,\n  *                                     or `null` to keep them as is\n  * @returns {object} - initial state object\n  */\n function state(list, sortMethod)\n {\n   var isNamedList = !Array.isArray(list)\n     , initState =\n     {\n       index    : 0,\n       keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n       jobs     : {},\n       results  : isNamedList ? {} : [],\n       size     : isNamedList ? Object.keys(list).length : list.length\n     }\n     ;\n\n   if (sortMethod)\n   {\n     // sort array keys based on it's values\n     // sort object's keys just on own merit\n     initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n     {\n       return sortMethod(list[a], list[b]);\n     });\n   }\n\n   return initState;\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}