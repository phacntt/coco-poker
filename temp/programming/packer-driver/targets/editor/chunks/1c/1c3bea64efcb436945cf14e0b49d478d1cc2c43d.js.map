{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/follow-redirects/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","url","define","exports","require","module","__filename","__dirname","URL","http","https","Writable","assert","debug","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","_redirectable","emit","InvalidUrlError","createErrorType","TypeError","RedirectionError","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","_performRequest","prototype","abort","abortRequest","_currentRequest","write","data","encoding","callback","isString","isBuffer","isFunction","length","maxBodyLength","push","end","currentRequest","setHeader","name","value","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","destroy","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","get","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","slice","agent","request","_currentUrl","test","format","_isRedirect","i","buffers","writeNext","error","buffer","finished","statusCode","trackRedirects","location","followRedirects","responseUrl","redirects","maxRedirects","requestHeaders","beforeRedirect","assign","Host","req","getHeader","removeMatchingHeaders","currentHostHeader","currentUrlParts","parse","currentHost","currentUrl","redirectUrl","resolve","cause","redirectUrlParts","isSubdomain","responseDetails","requestDetails","err","wrap","protocols","keys","wrappedProtocol","input","parsed","urlToOptions","equal","wrappedRequest","defineProperties","configurable","enumerable","writable","noop","urlObject","startsWith","hash","href","port","Number","regex","lastValue","header","undefined","String","trim","code","message","baseClass","CustomError","properties","Error","captureStackTrace","constructor","subdomain","domain","dot","endsWith","_cjsExports","_wrap"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'url';\nimport { __cjsMetaURL as _req0} from 'http';\nimport { __cjsMetaURL as _req1} from 'https';\nimport { __cjsMetaURL as _req2} from 'stream';\nimport { __cjsMetaURL as _req3} from 'assert';\nimport { __cjsMetaURL as _req4} from './debug';\nlet _cjsExports;\nlet _wrap;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var url = require(\"url\");\n var URL = url.URL;\n var http = require(\"http\");\n var https = require(\"https\");\n var Writable = require(\"stream\").Writable;\n var assert = require(\"assert\");\n var debug = require(\"./debug\");\n\n // Create handlers that pass events from native requests\n var events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\n var eventHandlers = Object.create(null);\n events.forEach(function (event) {\n   eventHandlers[event] = function (arg1, arg2, arg3) {\n     this._redirectable.emit(event, arg1, arg2, arg3);\n   };\n });\n\n var InvalidUrlError = createErrorType(\n   \"ERR_INVALID_URL\",\n   \"Invalid URL\",\n   TypeError\n );\n // Error types with codes\n var RedirectionError = createErrorType(\n   \"ERR_FR_REDIRECTION_FAILURE\",\n   \"Redirected request failed\"\n );\n var TooManyRedirectsError = createErrorType(\n   \"ERR_FR_TOO_MANY_REDIRECTS\",\n   \"Maximum number of redirects exceeded\"\n );\n var MaxBodyLengthExceededError = createErrorType(\n   \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n   \"Request body larger than maxBodyLength limit\"\n );\n var WriteAfterEndError = createErrorType(\n   \"ERR_STREAM_WRITE_AFTER_END\",\n   \"write after end\"\n );\n\n // An HTTP(S) request that can be redirected\n function RedirectableRequest(options, responseCallback) {\n   // Initialize the request\n   Writable.call(this);\n   this._sanitizeOptions(options);\n   this._options = options;\n   this._ended = false;\n   this._ending = false;\n   this._redirectCount = 0;\n   this._redirects = [];\n   this._requestBodyLength = 0;\n   this._requestBodyBuffers = [];\n\n   // Attach a callback if passed\n   if (responseCallback) {\n     this.on(\"response\", responseCallback);\n   }\n\n   // React to responses of native requests\n   var self = this;\n   this._onNativeResponse = function (response) {\n     self._processResponse(response);\n   };\n\n   // Perform the first request\n   this._performRequest();\n }\n RedirectableRequest.prototype = Object.create(Writable.prototype);\n\n RedirectableRequest.prototype.abort = function () {\n   abortRequest(this._currentRequest);\n   this.emit(\"abort\");\n };\n\n // Writes buffered data to the current native request\n RedirectableRequest.prototype.write = function (data, encoding, callback) {\n   // Writing is not allowed if end has been called\n   if (this._ending) {\n     throw new WriteAfterEndError();\n   }\n\n   // Validate input and shift parameters if necessary\n   if (!isString(data) && !isBuffer(data)) {\n     throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n   }\n   if (isFunction(encoding)) {\n     callback = encoding;\n     encoding = null;\n   }\n\n   // Ignore empty buffers, since writing them doesn't invoke the callback\n   // https://github.com/nodejs/node/issues/22066\n   if (data.length === 0) {\n     if (callback) {\n       callback();\n     }\n     return;\n   }\n   // Only write when we don't exceed the maximum body length\n   if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n     this._requestBodyLength += data.length;\n     this._requestBodyBuffers.push({ data: data, encoding: encoding });\n     this._currentRequest.write(data, encoding, callback);\n   }\n   // Error when we exceed the maximum body length\n   else {\n     this.emit(\"error\", new MaxBodyLengthExceededError());\n     this.abort();\n   }\n };\n\n // Ends the current native request\n RedirectableRequest.prototype.end = function (data, encoding, callback) {\n   // Shift parameters if necessary\n   if (isFunction(data)) {\n     callback = data;\n     data = encoding = null;\n   }\n   else if (isFunction(encoding)) {\n     callback = encoding;\n     encoding = null;\n   }\n\n   // Write data if needed and end\n   if (!data) {\n     this._ended = this._ending = true;\n     this._currentRequest.end(null, null, callback);\n   }\n   else {\n     var self = this;\n     var currentRequest = this._currentRequest;\n     this.write(data, encoding, function () {\n       self._ended = true;\n       currentRequest.end(null, null, callback);\n     });\n     this._ending = true;\n   }\n };\n\n // Sets a header value on the current native request\n RedirectableRequest.prototype.setHeader = function (name, value) {\n   this._options.headers[name] = value;\n   this._currentRequest.setHeader(name, value);\n };\n\n // Clears a header value on the current native request\n RedirectableRequest.prototype.removeHeader = function (name) {\n   delete this._options.headers[name];\n   this._currentRequest.removeHeader(name);\n };\n\n // Global timeout for all underlying requests\n RedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n   var self = this;\n\n   // Destroys the socket on timeout\n   function destroyOnTimeout(socket) {\n     socket.setTimeout(msecs);\n     socket.removeListener(\"timeout\", socket.destroy);\n     socket.addListener(\"timeout\", socket.destroy);\n   }\n\n   // Sets up a timer to trigger a timeout event\n   function startTimer(socket) {\n     if (self._timeout) {\n       clearTimeout(self._timeout);\n     }\n     self._timeout = setTimeout(function () {\n       self.emit(\"timeout\");\n       clearTimer();\n     }, msecs);\n     destroyOnTimeout(socket);\n   }\n\n   // Stops a timeout from triggering\n   function clearTimer() {\n     // Clear the timeout\n     if (self._timeout) {\n       clearTimeout(self._timeout);\n       self._timeout = null;\n     }\n\n     // Clean up all attached listeners\n     self.removeListener(\"abort\", clearTimer);\n     self.removeListener(\"error\", clearTimer);\n     self.removeListener(\"response\", clearTimer);\n     if (callback) {\n       self.removeListener(\"timeout\", callback);\n     }\n     if (!self.socket) {\n       self._currentRequest.removeListener(\"socket\", startTimer);\n     }\n   }\n\n   // Attach callback if passed\n   if (callback) {\n     this.on(\"timeout\", callback);\n   }\n\n   // Start the timer if or when the socket is opened\n   if (this.socket) {\n     startTimer(this.socket);\n   }\n   else {\n     this._currentRequest.once(\"socket\", startTimer);\n   }\n\n   // Clean up on events\n   this.on(\"socket\", destroyOnTimeout);\n   this.on(\"abort\", clearTimer);\n   this.on(\"error\", clearTimer);\n   this.on(\"response\", clearTimer);\n\n   return this;\n };\n\n // Proxy all other public ClientRequest methods\n [\n   \"flushHeaders\", \"getHeader\",\n   \"setNoDelay\", \"setSocketKeepAlive\",\n ].forEach(function (method) {\n   RedirectableRequest.prototype[method] = function (a, b) {\n     return this._currentRequest[method](a, b);\n   };\n });\n\n // Proxy all public ClientRequest properties\n [\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n   Object.defineProperty(RedirectableRequest.prototype, property, {\n     get: function () { return this._currentRequest[property]; },\n   });\n });\n\n RedirectableRequest.prototype._sanitizeOptions = function (options) {\n   // Ensure headers are always present\n   if (!options.headers) {\n     options.headers = {};\n   }\n\n   // Since http.request treats host as an alias of hostname,\n   // but the url module interprets host as hostname plus port,\n   // eliminate the host property to avoid confusion.\n   if (options.host) {\n     // Use hostname if set, because it has precedence\n     if (!options.hostname) {\n       options.hostname = options.host;\n     }\n     delete options.host;\n   }\n\n   // Complete the URL object when necessary\n   if (!options.pathname && options.path) {\n     var searchPos = options.path.indexOf(\"?\");\n     if (searchPos < 0) {\n       options.pathname = options.path;\n     }\n     else {\n       options.pathname = options.path.substring(0, searchPos);\n       options.search = options.path.substring(searchPos);\n     }\n   }\n };\n\n\n // Executes the next native request (initial or redirect)\n RedirectableRequest.prototype._performRequest = function () {\n   // Load the native protocol\n   var protocol = this._options.protocol;\n   var nativeProtocol = this._options.nativeProtocols[protocol];\n   if (!nativeProtocol) {\n     this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n     return;\n   }\n\n   // If specified, use the agent corresponding to the protocol\n   // (HTTP and HTTPS use different types of agents)\n   if (this._options.agents) {\n     var scheme = protocol.slice(0, -1);\n     this._options.agent = this._options.agents[scheme];\n   }\n\n   // Create the native request and set up its event handlers\n   var request = this._currentRequest =\n         nativeProtocol.request(this._options, this._onNativeResponse);\n   request._redirectable = this;\n   for (var event of events) {\n     request.on(event, eventHandlers[event]);\n   }\n\n   // RFC7230§5.3.1: When making a request directly to an origin server, […]\n   // a client MUST send only the absolute path […] as the request-target.\n   this._currentUrl = /^\\//.test(this._options.path) ?\n     url.format(this._options) :\n     // When making a request to a proxy, […]\n     // a client MUST send the target URI in absolute-form […].\n     this._options.path;\n\n   // End a redirected request\n   // (The first request must be ended explicitly with RedirectableRequest#end)\n   if (this._isRedirect) {\n     // Write the request entity and end\n     var i = 0;\n     var self = this;\n     var buffers = this._requestBodyBuffers;\n     (function writeNext(error) {\n       // Only write if this request has not been redirected yet\n       /* istanbul ignore else */\n       if (request === self._currentRequest) {\n         // Report any write errors\n         /* istanbul ignore if */\n         if (error) {\n           self.emit(\"error\", error);\n         }\n         // Write the next buffer if there are still left\n         else if (i < buffers.length) {\n           var buffer = buffers[i++];\n           /* istanbul ignore else */\n           if (!request.finished) {\n             request.write(buffer.data, buffer.encoding, writeNext);\n           }\n         }\n         // End the request if `end` has been called on us\n         else if (self._ended) {\n           request.end();\n         }\n       }\n     }());\n   }\n };\n\n // Processes a response from the current native request\n RedirectableRequest.prototype._processResponse = function (response) {\n   // Store the redirected response\n   var statusCode = response.statusCode;\n   if (this._options.trackRedirects) {\n     this._redirects.push({\n       url: this._currentUrl,\n       headers: response.headers,\n       statusCode: statusCode,\n     });\n   }\n\n   // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n   // that further action needs to be taken by the user agent in order to\n   // fulfill the request. If a Location header field is provided,\n   // the user agent MAY automatically redirect its request to the URI\n   // referenced by the Location field value,\n   // even if the specific status code is not understood.\n\n   // If the response is not a redirect; return it as-is\n   var location = response.headers.location;\n   if (!location || this._options.followRedirects === false ||\n       statusCode < 300 || statusCode >= 400) {\n     response.responseUrl = this._currentUrl;\n     response.redirects = this._redirects;\n     this.emit(\"response\", response);\n\n     // Clean up\n     this._requestBodyBuffers = [];\n     return;\n   }\n\n   // The response is a redirect, so abort the current request\n   abortRequest(this._currentRequest);\n   // Discard the remainder of the response to avoid waiting for data\n   response.destroy();\n\n   // RFC7231§6.4: A client SHOULD detect and intervene\n   // in cyclical redirections (i.e., \"infinite\" redirection loops).\n   if (++this._redirectCount > this._options.maxRedirects) {\n     this.emit(\"error\", new TooManyRedirectsError());\n     return;\n   }\n\n   // Store the request headers if applicable\n   var requestHeaders;\n   var beforeRedirect = this._options.beforeRedirect;\n   if (beforeRedirect) {\n     requestHeaders = Object.assign({\n       // The Host header was set by nativeProtocol.request\n       Host: response.req.getHeader(\"host\"),\n     }, this._options.headers);\n   }\n\n   // RFC7231§6.4: Automatic redirection needs to done with\n   // care for methods not known to be safe, […]\n   // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n   // the request method from POST to GET for the subsequent request.\n   var method = this._options.method;\n   if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n       // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n       // the server is redirecting the user agent to a different resource […]\n       // A user agent can perform a retrieval request targeting that URI\n       // (a GET or HEAD request if using HTTP) […]\n       (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n     this._options.method = \"GET\";\n     // Drop a possible entity and headers related to it\n     this._requestBodyBuffers = [];\n     removeMatchingHeaders(/^content-/i, this._options.headers);\n   }\n\n   // Drop the Host header, as the redirect might lead to a different host\n   var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n   // If the redirect is relative, carry over the host of the last request\n   var currentUrlParts = url.parse(this._currentUrl);\n   var currentHost = currentHostHeader || currentUrlParts.host;\n   var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n     url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n   // Determine the URL of the redirection\n   var redirectUrl;\n   try {\n     redirectUrl = url.resolve(currentUrl, location);\n   }\n   catch (cause) {\n     this.emit(\"error\", new RedirectionError({ cause: cause }));\n     return;\n   }\n\n   // Create the redirected request\n   debug(\"redirecting to\", redirectUrl);\n   this._isRedirect = true;\n   var redirectUrlParts = url.parse(redirectUrl);\n   Object.assign(this._options, redirectUrlParts);\n\n   // Drop confidential headers when redirecting to a less secure protocol\n   // or to a different domain that is not a superdomain\n   if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n      redirectUrlParts.protocol !== \"https:\" ||\n      redirectUrlParts.host !== currentHost &&\n      !isSubdomain(redirectUrlParts.host, currentHost)) {\n     removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n   }\n\n   // Evaluate the beforeRedirect callback\n   if (isFunction(beforeRedirect)) {\n     var responseDetails = {\n       headers: response.headers,\n       statusCode: statusCode,\n     };\n     var requestDetails = {\n       url: currentUrl,\n       method: method,\n       headers: requestHeaders,\n     };\n     try {\n       beforeRedirect(this._options, responseDetails, requestDetails);\n     }\n     catch (err) {\n       this.emit(\"error\", err);\n       return;\n     }\n     this._sanitizeOptions(this._options);\n   }\n\n   // Perform the redirected request\n   try {\n     this._performRequest();\n   }\n   catch (cause) {\n     this.emit(\"error\", new RedirectionError({ cause: cause }));\n   }\n };\n\n // Wraps the key/value object of protocols with redirect functionality\n function wrap(protocols) {\n   // Default settings\n   var exports = {\n     maxRedirects: 21,\n     maxBodyLength: 10 * 1024 * 1024,\n   };\n\n   // Wrap each protocol\n   var nativeProtocols = {};\n   Object.keys(protocols).forEach(function (scheme) {\n     var protocol = scheme + \":\";\n     var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n     var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n     // Executes a request, following redirects\n     function request(input, options, callback) {\n       // Parse parameters\n       if (isString(input)) {\n         var parsed;\n         try {\n           parsed = urlToOptions(new URL(input));\n         }\n         catch (err) {\n           /* istanbul ignore next */\n           parsed = url.parse(input);\n         }\n         if (!isString(parsed.protocol)) {\n           throw new InvalidUrlError({ input });\n         }\n         input = parsed;\n       }\n       else if (URL && (input instanceof URL)) {\n         input = urlToOptions(input);\n       }\n       else {\n         callback = options;\n         options = input;\n         input = { protocol: protocol };\n       }\n       if (isFunction(options)) {\n         callback = options;\n         options = null;\n       }\n\n       // Set defaults\n       options = Object.assign({\n         maxRedirects: exports.maxRedirects,\n         maxBodyLength: exports.maxBodyLength,\n       }, input, options);\n       options.nativeProtocols = nativeProtocols;\n       if (!isString(options.host) && !isString(options.hostname)) {\n         options.hostname = \"::1\";\n       }\n\n       assert.equal(options.protocol, protocol, \"protocol mismatch\");\n       debug(\"options\", options);\n       return new RedirectableRequest(options, callback);\n     }\n\n     // Executes a GET request, following redirects\n     function get(input, options, callback) {\n       var wrappedRequest = wrappedProtocol.request(input, options, callback);\n       wrappedRequest.end();\n       return wrappedRequest;\n     }\n\n     // Expose the properties on the wrapped protocol\n     Object.defineProperties(wrappedProtocol, {\n       request: { value: request, configurable: true, enumerable: true, writable: true },\n       get: { value: get, configurable: true, enumerable: true, writable: true },\n     });\n   });\n   return exports;\n }\n\n /* istanbul ignore next */\n function noop() { /* empty */ }\n\n // from https://github.com/nodejs/node/blob/master/lib/internal/url.js\n function urlToOptions(urlObject) {\n   var options = {\n     protocol: urlObject.protocol,\n     hostname: urlObject.hostname.startsWith(\"[\") ?\n       /* istanbul ignore next */\n       urlObject.hostname.slice(1, -1) :\n       urlObject.hostname,\n     hash: urlObject.hash,\n     search: urlObject.search,\n     pathname: urlObject.pathname,\n     path: urlObject.pathname + urlObject.search,\n     href: urlObject.href,\n   };\n   if (urlObject.port !== \"\") {\n     options.port = Number(urlObject.port);\n   }\n   return options;\n }\n\n function removeMatchingHeaders(regex, headers) {\n   var lastValue;\n   for (var header in headers) {\n     if (regex.test(header)) {\n       lastValue = headers[header];\n       delete headers[header];\n     }\n   }\n   return (lastValue === null || typeof lastValue === \"undefined\") ?\n     undefined : String(lastValue).trim();\n }\n\n function createErrorType(code, message, baseClass) {\n   // Create constructor\n   function CustomError(properties) {\n     Error.captureStackTrace(this, this.constructor);\n     Object.assign(this, properties || {});\n     this.code = code;\n     this.message = this.cause ? message + \": \" + this.cause.message : message;\n   }\n\n   // Attach constructor and set default properties\n   CustomError.prototype = new (baseClass || Error)();\n   CustomError.prototype.constructor = CustomError;\n   CustomError.prototype.name = \"Error [\" + code + \"]\";\n   return CustomError;\n }\n\n function abortRequest(request) {\n   for (var event of events) {\n     request.removeListener(event, eventHandlers[event]);\n   }\n   request.on(\"error\", noop);\n   request.abort();\n }\n\n function isSubdomain(subdomain, domain) {\n   assert(isString(subdomain) && isString(domain));\n   var dot = subdomain.length - domain.length - 1;\n   return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n }\n\n function isString(value) {\n   return typeof value === \"string\" || value instanceof String;\n }\n\n function isFunction(value) {\n   return typeof value === \"function\";\n }\n\n function isBuffer(value) {\n   return typeof value === \"object\" && (\"length\" in value);\n }\n\n // Exports\n module.exports = wrap({ http: http, https: https });\n module.exports.wrap = wrap;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_wrap = module.exports.wrap;\n\n}, () => ({\n  'url': _req,\n  'http': _req0,\n  'https': _req1,\n  'stream': _req2,\n  'assert': _req3,\n  './debug': _req4,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}