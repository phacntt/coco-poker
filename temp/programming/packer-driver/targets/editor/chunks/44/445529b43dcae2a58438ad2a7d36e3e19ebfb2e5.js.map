{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/adapters/adapters.js"],"names":["utils","httpAdapter","xhrAdapter","AxiosError","knownAdapters","http","xhr","forEach","fn","value","Object","defineProperty","e","getAdapter","adapters","isArray","length","nameOrAdapter","adapter","i","isString","toLowerCase","Error","hasOwnProp","isFunction","TypeError"],"mappings":";;;;;;AAAOA,MAAAA,K;;AACAC,MAAAA,W;;AACAC,MAAAA,U;;AACAC,MAAAA,U;;;AAEDC,MAAAA,a,GAAgB;AACpBC,QAAAA,IAAI,EAAEJ,WADc;AAEpBK,QAAAA,GAAG,EAAEJ;AAFe,O;AAKtBF,MAAAA,KAAK,CAACO,OAAN,CAAcH,aAAd,EAA6B,CAACI,EAAD,EAAKC,KAAL,KAAe;AAC1C,YAAGD,EAAH,EAAO;AACL,cAAI;AACFE,YAAAA,MAAM,CAACC,cAAP,CAAsBH,EAAtB,EAA0B,MAA1B,EAAkC;AAACC,cAAAA;AAAD,aAAlC;AACD,WAFD,CAEE,OAAOG,CAAP,EAAU,CACV;AACD;;AACDF,UAAAA,MAAM,CAACC,cAAP,CAAsBH,EAAtB,EAA0B,aAA1B,EAAyC;AAACC,YAAAA;AAAD,WAAzC;AACD;AACF,OATD;;yBAWe;AACbI,QAAAA,UAAU,EAAGC,QAAD,IAAc;AACxBA,UAAAA,QAAQ,GAAGd,KAAK,CAACe,OAAN,CAAcD,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAhD;AAEA,gBAAM;AAACE,YAAAA;AAAD,cAAWF,QAAjB;AACA,cAAIG,aAAJ;AACA,cAAIC,OAAJ;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,YAAAA,aAAa,GAAGH,QAAQ,CAACK,CAAD,CAAxB;;AACA,gBAAID,OAAO,GAAGlB,KAAK,CAACoB,QAAN,CAAeH,aAAf,IAAgCb,aAAa,CAACa,aAAa,CAACI,WAAd,EAAD,CAA7C,GAA6EJ,aAA3F,EAA2G;AACzG;AACD;AACF;;AAED,cAAI,CAACC,OAAL,EAAc;AACZ,gBAAIA,OAAO,KAAK,KAAhB,EAAuB;AACrB,oBAAM,IAAIf,UAAJ,CACH,WAAUc,aAAc,sCADrB,EAEJ,iBAFI,CAAN;AAID;;AAED,kBAAM,IAAIK,KAAJ,CACJtB,KAAK,CAACuB,UAAN,CAAiBnB,aAAjB,EAAgCa,aAAhC,IACG,YAAWA,aAAc,iCAD5B,GAEG,oBAAmBA,aAAc,GAHhC,CAAN;AAKD;;AAED,cAAI,CAACjB,KAAK,CAACwB,UAAN,CAAiBN,OAAjB,CAAL,EAAgC;AAC9B,kBAAM,IAAIO,SAAJ,CAAc,2BAAd,CAAN;AACD;;AAED,iBAAOP,OAAP;AACD,SAnCY;AAoCbJ,QAAAA,QAAQ,EAAEV;AApCG,O","sourcesContent":["import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n"]}