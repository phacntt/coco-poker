{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/helpers/fromDataURI.js"],"names":["fromDataURI","uri","asBlob","options","_Blob","Blob","platform","classes","protocol","parseProtocol","undefined","length","slice","match","DATA_URL_PATTERN","exec","AxiosError","ERR_INVALID_URL","mime","isBase64","body","buffer","Buffer","from","decodeURIComponent","ERR_NOT_SUPPORT","type"],"mappings":"AAAA;;;;;;;AAkBe,WAASA,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AACxD,UAAMC,KAAK,GAAGD,OAAO,IAAIA,OAAO,CAACE,IAAnB,IAA2BC,QAAQ,CAACC,OAAT,CAAiBF,IAA1D;;AACA,UAAMG,QAAQ,GAAGC,aAAa,CAACR,GAAD,CAA9B;;AAEA,QAAIC,MAAM,KAAKQ,SAAX,IAAwBN,KAA5B,EAAmC;AACjCF,MAAAA,MAAM,GAAG,IAAT;AACD;;AAED,QAAIM,QAAQ,KAAK,MAAjB,EAAyB;AACvBP,MAAAA,GAAG,GAAGO,QAAQ,CAACG,MAAT,GAAkBV,GAAG,CAACW,KAAJ,CAAUJ,QAAQ,CAACG,MAAT,GAAkB,CAA5B,CAAlB,GAAmDV,GAAzD;AAEA,YAAMY,KAAK,GAAGC,gBAAgB,CAACC,IAAjB,CAAsBd,GAAtB,CAAd;;AAEA,UAAI,CAACY,KAAL,EAAY;AACV,cAAM,IAAIG,UAAJ,CAAe,aAAf,EAA8BA,UAAU,CAACC,eAAzC,CAAN;AACD;;AAED,YAAMC,IAAI,GAAGL,KAAK,CAAC,CAAD,CAAlB;AACA,YAAMM,QAAQ,GAAGN,KAAK,CAAC,CAAD,CAAtB;AACA,YAAMO,IAAI,GAAGP,KAAK,CAAC,CAAD,CAAlB;AACA,YAAMQ,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,kBAAkB,CAACJ,IAAD,CAA9B,EAAsCD,QAAQ,GAAG,QAAH,GAAc,MAA5D,CAAf;;AAEA,UAAIjB,MAAJ,EAAY;AACV,YAAI,CAACE,KAAL,EAAY;AACV,gBAAM,IAAIY,UAAJ,CAAe,uBAAf,EAAwCA,UAAU,CAACS,eAAnD,CAAN;AACD;;AAED,eAAO,IAAIrB,KAAJ,CAAU,CAACiB,MAAD,CAAV,EAAoB;AAACK,UAAAA,IAAI,EAAER;AAAP,SAApB,CAAP;AACD;;AAED,aAAOG,MAAP;AACD;;AAED,UAAM,IAAIL,UAAJ,CAAe,0BAA0BR,QAAzC,EAAmDQ,UAAU,CAACS,eAA9D,CAAN;AACD;;qBAlCuBzB,W;;;;AAhBjBgB,MAAAA,U;;AACAP,MAAAA,a;;AACAH,MAAAA,Q;;;AAEDQ,MAAAA,gB,GAAmB,+C;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport parseProtocol from './parseProtocol.js';\nimport platform from '../platform/index.js';\n\nconst DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n\n/**\n * Parse data uri to a Buffer or Blob\n *\n * @param {String} uri\n * @param {?Boolean} asBlob\n * @param {?Object} options\n * @param {?Function} options.Blob\n *\n * @returns {Buffer|Blob}\n */\nexport default function fromDataURI(uri, asBlob, options) {\n  const _Blob = options && options.Blob || platform.classes.Blob;\n  const protocol = parseProtocol(uri);\n\n  if (asBlob === undefined && _Blob) {\n    asBlob = true;\n  }\n\n  if (protocol === 'data') {\n    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;\n\n    const match = DATA_URL_PATTERN.exec(uri);\n\n    if (!match) {\n      throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);\n    }\n\n    const mime = match[1];\n    const isBase64 = match[2];\n    const body = match[3];\n    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? 'base64' : 'utf8');\n\n    if (asBlob) {\n      if (!_Blob) {\n        throw new AxiosError('Blob is not supported', AxiosError.ERR_NOT_SUPPORT);\n      }\n\n      return new _Blob([buffer], {type: mime});\n    }\n\n    return buffer;\n  }\n\n  throw new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_NOT_SUPPORT);\n}\n"]}