{"version":3,"sources":["file:///Users/apple/Documents/Dads/coco-poker/node_modules/axios/lib/adapters/http.js"],"names":["dispatchBeforeRedirect","options","beforeRedirects","proxy","config","setProxy","configProxy","location","proxyUrl","getProxyForUrl","URL","username","auth","password","base64","Buffer","from","toString","headers","host","hostname","port","proxyHost","path","protocol","includes","beforeRedirect","redirectOptions","href","utils","settle","buildFullPath","buildURL","http","https","util","followRedirects","zlib","VERSION","transitionalDefaults","AxiosError","CanceledError","platform","fromDataURI","stream","AxiosHeaders","AxiosTransformStream","EventEmitter","formDataToStream","readBlob","ZlibHeaderTransformStream","zlibOptions","flush","constants","Z_SYNC_FLUSH","finishFlush","brotliOptions","BROTLI_OPERATION_FLUSH","isBrotliSupported","isFunction","createBrotliDecompress","httpFollow","httpsFollow","isHttps","supportedProtocols","protocols","map","isHttpAdapterSupported","process","kindOf","wrapAsync","asyncExecutor","Promise","resolve","reject","onDone","isDone","done","value","isRejected","_resolve","_reject","reason","onDoneHandler","catch","httpAdapter","dispatchHttpRequest","data","responseType","responseEncoding","method","toUpperCase","rejected","req","emitter","onFinished","cancelToken","unsubscribe","abort","signal","removeEventListener","removeAllListeners","emit","type","once","subscribe","aborted","addEventListener","fullPath","baseURL","url","parsed","convertedData","status","statusText","Blob","env","err","ERR_BAD_REQUEST","stripBOM","Readable","indexOf","normalize","set","onDownloadProgress","onUploadProgress","maxRate","maxUploadRate","undefined","maxDownloadRate","isSpecCompliantForm","userBoundary","getContentType","formHeaders","tag","boundary","isFormData","getHeaders","hasContentLength","knownLength","promisify","getLength","call","Number","isFinite","setContentLength","e","isBlob","size","setContentType","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","length","maxBodyLength","contentLength","toFiniteNumber","getContentLength","isArray","objectMode","pipeline","noop","on","progress","Object","assign","upload","urlUsername","urlPassword","delete","pathname","search","params","paramsSerializer","replace","customErr","Error","message","exists","toJSON","agents","httpAgent","httpsAgent","socketPath","transport","isHttpsRequest","test","agent","maxRedirects","Infinity","insecureHTTPParser","request","handleResponse","res","destroyed","streams","responseLength","transformStream","download","push","responseStream","lastRequest","decompress","statusCode","createUnzip","offListeners","finished","response","statusMessage","responseBuffer","totalResponseBytes","handleStreamData","chunk","maxContentLength","destroy","ERR_BAD_RESPONSE","handlerStreamAborted","handleStreamError","handleStreamEnd","responseData","concat","handleRequestError","handleRequestSocket","socket","setKeepAlive","timeout","parseInt","isNaN","ERR_BAD_OPTION_VALUE","setTimeout","handleRequestTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","ECONNABORTED","ended","errored","pipe","end","__setProxy"],"mappings":"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","sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport {getProxyForUrl} from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport EventEmitter from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const parsed = new URL(fullPath, 'http://localhost');\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const onDownloadProgress = config.onDownloadProgress;\n    const onUploadProgress = config.onUploadProgress;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        length: contentLength,\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', progress => {\n        onUploadProgress(Object.assign(progress, {\n          upload: true\n        }));\n      });\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress) {\n        const transformStream = new AxiosTransformStream({\n          length: utils.toFiniteNumber(responseLength),\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        });\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n"]}